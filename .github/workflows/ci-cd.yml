name: 🚀 CI for DDD Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    name: 🧪 Build & Test .NET
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🛠️ Build
        run: dotnet build --no-restore --configuration Release

      - name: ✅ Run unit tests with code coverage
        run: dotnet test ./DDDAplication.NUnitTests/DDDAplication.NUnitTests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --verbosity normal
      
      - name: ✅ Run integration tests with code coverage
        run: dotnet test ./DDDAplication.Api.IntegrationTests/DDDAplication.Api.IntegrationTests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --verbosity normal

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate coverage report
        run: |
          reportgenerator "-reports:./TestResults/*.xml" "-targetdir:./TestResults/coverage-report" -reporttypes:Html

      - name: Upload coverage report as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./TestResults/coverage-report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./TestResults/coverage.cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}  
